@startuml
' Remove shadows
skinparam shadowing false

' Generated diagram will be in black/grey/white.
skinparam monochrome true

skinparam packageStyle rectangle

class ClinicaFIS {
 direccion : String
 telefono : String
 web : String

 obtenerDiaHoy() : Fecha
 crearPaciente(dni : String, nombre : String, numeroTarjeta : String, direccion : String, telefono : String, fechaNacimiento : Fecha) : TODO
 consultarPaciente(idPaciente: TODO) : TODO
 datosClinicosPaciente(idPaciente: TODO) : TODO
 anularCita(idPaciente : String, idCita : String) : String
 pedirCita(idPaciente : String, idMédico : String, fecha : Fecha) : String
 consultarCM(idConsulta : String) : TODO
 modificarCM(idConsulta : String, especialidad : String, idSanitario : String) : void
 eliminarCM(idConsulta : String) : void
 llamarSiguientePaciente(idSanitario : String) : String
 diagnosticar(idHC, codDiagnostico, textoExplicativo, idMedico)
 terminarConsulta(idMedico, idPaciente) : void
 eliminarPaciente(idPaciente : TODO) : String [0..*]
 modificarPaciente(idPaciente : TODO, dni : String, nombre : String, numeroTarjeta : String, direccion : String, telefono : String, numeroTarjeta : String) : void
 consultarCitas(idPaciente) : String[0..*]
}

class Paciente {
 dni : String
 nombre : String
 numeroTarjeta : int
 direccion : String
 telefono : String
 fechaNacimiento : String
 activo : Boolean

 crear(dni : String, nombre : String, numeroTarjeta : String, direccion : String, telefono : String, fechaNacimiento : Fecha, activo : Boolean)
 obtenerInfoHC() : TODO
 incluirHC(HC: HistorialClinico)
 obtenerCitas() : Citas[0..*]
 desactivarPaciente() : void
 modificarDatos(dni : String, nombre : String, direccion : String, telefono : String, numeroTarjeta : String) : void
 eliminarEnlace( cita : Cita) : void
}

class HistorialClinico {
 {static} ultHistorial: int
 numeroHistoria : int
 fechaApertura : Fecha

 crear(fechaApertura : Fecha, paciente : Paciente)
 buscarHistC(idHC) : HistorialClinico
 obtenerNombrePaciente() : String
 obtenerNumeroHistoria() : int
 obtenerFechaApertura() : Fecha
 obtenerInfoAnotaciones() : TODO
}

class AnotacionHC {
 fechaAnotacion : Fecha
 comentario : String

 obtenerNombreSanitario() : String
}

class Sanitario {
 nombre : String
 dni : String
 puesto : String

 obtenerSanitarioConsulta(idConsulta : String) : Sanitario
 buscarSanitario(idSanitario : String) : Sanitario
 obtenerCitas() : Cita[0..*]
}

class Consulta {
 tespecialidad : String

 buscarConsulta(idConsulta : String) : Consulta
 eliminar(idConsulta : String) : void
 getSanitAsociado(idConsulta : String) : Sanitario
}

class HorarioUso{
 horaComienzo : Hora
 horaFin : Hora

 getHorario(idConsulta : String) : HorarioUso
}

class Cita {
 hora : Hora
 fecha : Fecha

 getEstado() : String
 cambiarEstado(estado : TipoEstado) : void
 obtenerMédico() : Medico
 obtenerPaciente() : Paciente
 buscarCita(idMédico : Médico, fecha : Fecha) : Cita
 modificarEstado(estado : TipoEstado) : void

}

enum TipoEstado {
 PENDIENTE
 ENESPERA
 ATENDIDA
 LIBRE
}

class ExcepcionCita {
 crear(error : String)
}

class ExcepcionFecha {
 crear(error : String)
}

class ExcepcionConsulta {
 eliminar(error : String)
}

class Medico {
 númeroColegiado : int
 especialidadMédica : String

 obtenerCitas() : Citas[0..*]
 getNombre() : String
}

class Diagnostico {
 crear(codDiagnostico, fecha, textoExplicativo)
}

ClinicaFIS -- "1..*" Paciente
Paciente -- "0..1" HistorialClinico
ClinicaFIS ..> HistorialClinico
AnotacionHC -> Sanitario
HistorialClinico -* "0..*" AnotacionHC
Cita -- TipoEstado : "estado"
ClinicaFIS --> "0..*" Cita
ClinicaFIS --> "0..*" Sanitario
ClinicaFIS --> ExcepcionCita
ClinicaFIS --> "0..*" Medico
ClinicaFIS --> "0..*" Diagnostico
Diagnostico .. HistorialClinico
Diagnostico .. Medico
ClinicaFIS --> ExcepcionFecha
Cita -- Medico
ClinicaFIS --> ExcepcionConsulta
Sanitario -- "0..*" Consulta
Consulta -- "0..*" Cita
Consulta .. HorarioUso
Paciente -- "0..*" Cita

@enduml
